import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.backend.*;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;
import java.awt.*;
import java.util.List;

public class DetailsPanel {
    private JPanel detailsPanel;
    private JButton wróćButton;
    private JPanel chartPanel;
    private JButton buttonCheckRate;
    private JPanel infoPanel;
    private String currencyCode;


    public static void main(String[] args) {


        JFrame frame = new JFrame("Okno ze szczegółami");
        DetailsPanel detailspanel = new DetailsPanel("USD");

        frame.setContentPane(detailspanel.detailsPanel);
        frame.setPreferredSize(new Dimension(800, 600));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);


    }

    DetailsPanel(String currencyCode) {
        this.currencyCode = currencyCode;
        $$$setupUI$$$();
        buttonCheckRate.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    double freshRate = CurrencyAPI.getExchangeRate(currencyCode);
                    Database.saveRate(currencyCode, freshRate);






                    detailsPanel.remove(chartPanel);
                    chartPanel = Chart.createChartPanel(currencyCode);
                    detailsPanel.add(chartPanel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));

                    detailsPanel.remove(infoPanel);
                    infoPanel = new InfoForUser(currencyCode);
                    detailsPanel.add(infoPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));


                    detailsPanel.revalidate();
                    detailsPanel.repaint();
                } catch (Exception any) {
                    any.printStackTrace();
                }
            }
        });

        wróćButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFrame frame = new JFrame("Aplikacja do sprawdzania kursów polskiej waluty");
                frame.setContentPane(new MainPanel().$$$getRootComponent$$$());
                frame.setPreferredSize(new Dimension(800, 600));
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
                SwingUtilities.getWindowAncestor(detailsPanel).dispose();
            }
        });


    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        detailsPanel = new JPanel();
        detailsPanel.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        detailsPanel.setBackground(new Color(-1));
        detailsPanel.setEnabled(true);
        detailsPanel.setMinimumSize(new Dimension(800, 800));
        detailsPanel.setPreferredSize(new Dimension(1200, 1200));
        wróćButton = new JButton();
        wróćButton.setText("Wróć");
        detailsPanel.add(wróćButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        detailsPanel.add(chartPanel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        buttonCheckRate = new JButton();
        buttonCheckRate.setText("Sprawdź najnowszy kurs");
        detailsPanel.add(buttonCheckRate, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JSeparator separator1 = new JSeparator();
        separator1.setAlignmentY(0.1f);
        detailsPanel.add(separator1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        detailsPanel.add(infoPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return detailsPanel;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        chartPanel = Chart.createChartPanel(currencyCode);
        infoPanel = new InfoForUser(currencyCode);
    }
}


