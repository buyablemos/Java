import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.backend.Database;

import javax.swing.*;
import java.awt.*;

public class RegisterPanel {
    private JPanel panel;
    private JTextField textField1;
    private JPasswordField passwordField1;
    private JPasswordField passwordField2;
    private JButton zalogujButton;
    private JButton wróćButton;

    public static void main(String[] args) {
        JFrame frame = new JFrame("Ekran logowania do aplikacji");


        frame.setContentPane(new RegisterPanel().panel);
        frame.setPreferredSize(new Dimension(800, 600));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    RegisterPanel() {
        zalogujButton.addActionListener(e -> {

            try {


                String username = this.textField1.getText();

                String password = new String(this.passwordField1.getPassword());
                String password2 = new String(this.passwordField2.getPassword());

                if (!password2.equals(password)) {
                    JOptionPane.showMessageDialog(this.panel, "Hasła się nie pokrywają", "Błąd danych", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (Database.addUser(username, password)) {

                    SwingUtilities.getWindowAncestor(panel).dispose();
                    JOptionPane.showMessageDialog(this.panel, "Pomyślnie zarejestrowano użytkownika", "Pozytywna rejestracja", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this.panel, "Błąd przy dodawaniu podanego użytkownika/Użytkownik może już istnieć w bazie", "Błąd rejestracji", JOptionPane.ERROR_MESSAGE);
                }


            } catch (NumberFormatException ex) {

                JOptionPane.showMessageDialog(this.panel, "Wprowadź login, hasło oraz powtórzone hasło", "Brak danych wejściowych", JOptionPane.ERROR_MESSAGE);
            }


        });

        wróćButton.addActionListener(e -> {
            JFrame frame = new JFrame("Ekran logowania do aplikacji");


            frame.setContentPane(new LoginPanel().$$$getRootComponent$$$());
            frame.setPreferredSize(new Dimension(800, 600));
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.pack();
            frame.setVisible(true);
            SwingUtilities.getWindowAncestor(this.panel).dispose();

        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(7, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel.setBackground(new Color(-1));
        textField1 = new JTextField();
        textField1.setHorizontalAlignment(0);
        panel.add(textField1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setBackground(new Color(-16777216));
        label1.setForeground(new Color(-16777216));
        label1.setText("Wprowadź nazwę użytkownika:");
        panel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setBackground(new Color(-16777216));
        label2.setForeground(new Color(-16777216));
        label2.setText("Wprowadź hasło dwukrotnie:");
        panel.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        zalogujButton = new JButton();
        zalogujButton.setText("Zarejestruj się w naszej aplikacji");
        panel.add(zalogujButton, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        wróćButton = new JButton();
        wróćButton.setText("Wróć");
        panel.add(wróćButton, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passwordField1 = new JPasswordField();
        passwordField1.setHorizontalAlignment(0);
        panel.add(passwordField1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        passwordField2 = new JPasswordField();
        passwordField2.setHorizontalAlignment(0);
        panel.add(passwordField2, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
